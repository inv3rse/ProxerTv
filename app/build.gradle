apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

// get api key from properties or environment variable
def apiKey = ""
if (hasProperty("ProxerApiKey")) {
    apiKey = ProxerApiKey
} else {
    apiKey = System.getenv("ProxerApiKey")
}

final signing = 'com.inverse.unofficial.proxertv'
if (hasProperty(signing)) {
    apply from: property(signing)
}

android {
    compileSdkVersion 28
    buildToolsVersion "28.0.3"

    defaultConfig {
        applicationId "com.inverse.unofficial.proxertv"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 11
        versionName "Alpha 11"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField("String", "PROXER_API_KEY", apiKey)
    }
    buildTypes {
        debug {
            applicationIdSuffix '.debug'
            minifyEnabled false
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        test.resources.srcDirs += 'src/test/resources/'
        test.java.srcDirs += 'src/testUtils/java'
        androidTest.java.srcDirs += 'src/testUtils/java'
    }

    lintOptions {
        lintConfig file("lint.xml")
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }
}

// keep generated classes
kapt {
    generateStubs = true
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // Ktx
    implementation 'androidx.core:core-ktx:1.3.2'

    // Lifecycle, ViewModel, LiveData
    def lifecycle_version = '2.2.0'
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    // Live Data thread override test rule
    testImplementation "androidx.arch.core:core-testing:2.1.0"

    // Support Library
    implementation 'androidx.leanback:leanback:1.0.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation('androidx.media:media:1.2.0')

    // constraint layout
    implementation 'androidx.constraintlayout:constraintlayout:2.0.2'

    // Glide
    def glide_version = '4.11.0'
    implementation "com.github.bumptech.glide:glide:$glide_version"
    implementation "com.github.bumptech.glide:okhttp3-integration:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    // RxJava
    implementation 'io.reactivex:rxjava:1.3.8'
    implementation 'io.reactivex:rxandroid:1.2.1'

    // RxKotlin
    implementation 'io.reactivex.rxjava2:rxjava:2.2.19'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'io.reactivex.rxjava2:rxkotlin:2.4.0'

    implementation 'com.github.akarnokd:rxjava2-interop:0.13.4'

    // OkHttp
    def okhttp_version = '4.0.1'
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"
    implementation 'com.github.franmontiel:PersistentCookieJar:v1.0.1'

    // Retrofit
    def retrofit_version = "2.6.4"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava:$retrofit_version"

    // Kotlin Gson
    implementation 'com.github.salomonbrys.kotson:kotson:2.5.0'

    // BeautifulSoup
    // 1.11.3 causes a lot of io exceptions
    //noinspection GradleDependency
    implementation 'org.jsoup:jsoup:1.10.3'

    // ExoPlayer
    implementation('com.google.android.exoplayer:exoplayer:2.12.0')

    // Dagger 2
    def dagger_version = '2.29.1'
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    // Anko
    def anko_version = '0.10.7'
    implementation "org.jetbrains.anko:anko-sqlite:$anko_version"

    // PaperParcel
    def paperparcel_version = '1.0.0'
    implementation "com.github.grandstaish.paperparcel:paperparcel:$paperparcel_version"
    implementation "com.github.grandstaish.paperparcel:paperparcel-kotlin:$paperparcel_version"
    kapt "com.github.grandstaish.paperparcel:compiler:$paperparcel_version"

    // Timber
    implementation 'com.jakewharton.timber:timber:4.7.1'

    // Testing
    testImplementation 'junit:junit:4.13'
    testImplementation "com.squareup.okhttp3:mockwebserver:$okhttp_version"
    testImplementation "com.nhaarman:mockito-kotlin:1.6.0"
    androidTestImplementation "com.squareup.okhttp3:mockwebserver:$okhttp_version"
    androidTestImplementation('androidx.test:runner:1.3.0') {
        exclude module: 'support-annotations'
    }
    androidTestImplementation('androidx.test:rules:1.3.0') {
        exclude module: 'support-annotations'
    }
}
