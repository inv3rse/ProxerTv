apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion 24
    buildToolsVersion "24.0.0"

    defaultConfig {
        applicationId "com.inverse.unofficial.proxertv"
        minSdkVersion 21
        targetSdkVersion 24
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            applicationIdSuffix '.debug'
            minifyEnabled false
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        test.resources.srcDirs += 'src/test/resources/'
        test.java.srcDirs += 'src/testUtils/java'
        androidTest.java.srcDirs += 'src/testUtils/java'
    }
}

// keep generated classes
kapt {
    generateStubs = true
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    // Kotlin
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    // Support Library
    def support_library_version = '24.0.0'
    compile "com.android.support:appcompat-v7:$support_library_version"
    compile "com.android.support:recyclerview-v7:$support_library_version"
    compile "com.android.support:leanback-v17:$support_library_version"

    // Glide
    compile 'com.github.bumptech.glide:glide:3.7.0'

    // RxJava
    compile 'io.reactivex:rxjava:1.1.6'
    compile 'io.reactivex:rxandroid:1.2.1'

    // OkHttp
    def okhttp_version = '3.3.1'
    compile "com.squareup.okhttp3:okhttp:$okhttp_version"
    compile "com.squareup.okhttp3:logging-interceptor:$okhttp_version"
    compile 'com.github.franmontiel:PersistentCookieJar:v0.9.3'

    // Kotlin Gson
    compile 'com.github.salomonbrys.kotson:kotson:2.2.1'

    // BeautifulSoup
    compile 'org.jsoup:jsoup:1.9.2'

    // ExoPlayer
    compile 'com.google.android.exoplayer:exoplayer:r1.5.9'

    // Dagger 2
    def dagger_version = '2.5'
    compile "com.google.dagger:dagger:$dagger_version";
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    compile "javax.annotation:javax.annotation-api:1.2" // pick up generated classes

    // Anko
    def anko_version = '0.8.3'
    compile "org.jetbrains.anko:anko-common:$anko_version"
    compile "org.jetbrains.anko:anko-sqlite:$anko_version"

    // Testing
    testCompile 'junit:junit:4.12'
    testCompile "com.squareup.okhttp3:mockwebserver:$okhttp_version"
    androidTestCompile('com.android.support.test:runner:0.5') {
        exclude module: 'support-annotations'
    }
    androidTestCompile('com.android.support.test:rules:0.5') {
        exclude module: 'support-annotations'
    }
}
